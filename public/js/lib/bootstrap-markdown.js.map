{"version":3,"sources":["bootstrap-markdown.js"],"names":[],"mappingsfile":"bootstrap-markdown.js","sourcesContent":["/* ===================================================\r\n * bootstrap-markdown.js v2.10.0\r\n * http://github.com/toopay/bootstrap-markdown\r\n * ===================================================\r\n * Copyright 2013-2016 Taufan Aditya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================== */\r\n\r\n(function(factory){\r\n    if (typeof define === \"function\" && define.amd) {\r\n        //RequireJS\r\n        define([\"jquery\"], factory);\r\n    } else if (typeof exports === 'object') {\r\n        //Backbone.js\r\n        factory(require('jquery'));\r\n    } else {\r\n        //Jquery plugin\r\n        factory(jQuery);\r\n    }\r\n}(function($){\r\n  \"use strict\"; // jshint ;_;\r\n\r\n  /* MARKDOWN CLASS DEFINITION\r\n   * ========================== */\r\n\r\n  var Markdown = function (element, options) {\r\n    // @TODO : remove this BC on next major release\r\n    // @see : https://github.com/toopay/bootstrap-markdown/issues/109\r\n    var opts = ['autofocus', 'savable', 'hideable', 'width', \r\n      'height', 'resize', 'iconlibrary', 'language', \r\n      'footer', 'fullscreen', 'hiddenButtons', 'disabledButtons'];\r\n    $.each(opts,function(_, opt){\r\n      if (typeof $(element).data(opt) !== 'undefined') {\r\n        options = typeof options == 'object' ? options : {}\r\n        options[opt] = $(element).data(opt)\r\n      }\r\n    });\r\n    // End BC\r\n\r\n    // Class Properties\r\n    this.$ns           = 'bootstrap-markdown';\r\n    this.$element      = $(element);\r\n    this.$editable     = {el:null, type:null,attrKeys:[], attrValues:[], content:null};\r\n    this.$options      = $.extend(true, {}, $.fn.markdown.defaults, options, this.$element.data('options'));\r\n    this.$oldContent   = null;\r\n    this.$isPreview    = false;\r\n    this.$isFullscreen = false;\r\n    this.$editor       = null;\r\n    this.$textarea     = null;\r\n    this.$handler      = [];\r\n    this.$callback     = [];\r\n    this.$nextTab      = [];\r\n\r\n    this.showEditor();\r\n  };\r\n\r\n  Markdown.prototype = {\r\n\r\n    constructor: Markdown\r\n\r\n  , __alterButtons: function(name,alter) {\r\n      var handler = this.$handler, isAll = (name == 'all'),that = this;\r\n\r\n      $.each(handler,function(k,v) {\r\n        var halt = true;\r\n        if (isAll) {\r\n          halt = false;\r\n        } else {\r\n          halt = v.indexOf(name) < 0;\r\n        }\r\n\r\n        if (halt === false) {\r\n          alter(that.$editor.find('button[data-handler=\"'+v+'\"]'));\r\n        }\r\n      });\r\n    }\r\n\r\n  , __buildButtons: function(buttonsArray, container) {\r\n      var i,\r\n          ns = this.$ns,\r\n          handler = this.$handler,\r\n          callback = this.$callback;\r\n\r\n      for (i=0;i<buttonsArray.length;i++) {\r\n        // Build each group container\r\n        var y, btnGroups = buttonsArray[i];\r\n        for (y=0;y<btnGroups.length;y++) {\r\n          // Build each button group\r\n          var z,\r\n              buttons = btnGroups[y].data,\r\n              btnGroupContainer = $('<div/>', {\r\n                                    'class': 'btn-group'\r\n                                  });\r\n\r\n          for (z=0;z<buttons.length;z++) {\r\n            var button = buttons[z],\r\n                buttonContainer, buttonIconContainer,\r\n                buttonHandler = ns+'-'+button.name,\r\n                buttonIcon = this.__getIcon(button.icon),\r\n                btnText = button.btnText ? button.btnText : '',\r\n                btnClass = button.btnClass ? button.btnClass : 'btn',\r\n                tabIndex = button.tabIndex ? button.tabIndex : '-1',\r\n                hotkey = typeof button.hotkey !== 'undefined' ? button.hotkey : '',\r\n                hotkeyCaption = typeof jQuery.hotkeys !== 'undefined' && hotkey !== '' ? ' ('+hotkey+')' : '';\r\n\r\n            // Construct the button object\r\n            buttonContainer = $('<button></button>');\r\n            buttonContainer.text(' ' + this.__localize(btnText)).addClass('btn-default btn-sm').addClass(btnClass);\r\n            if(btnClass.match(/btn\\-(primary|success|info|warning|danger|link)/)){\r\n                buttonContainer.removeClass('btn-default');\r\n            }\r\n            buttonContainer.attr({\r\n                'type': 'button',\r\n                'title': this.__localize(button.title) + hotkeyCaption,\r\n                'tabindex': tabIndex,\r\n                'data-provider': ns,\r\n                'data-handler': buttonHandler,\r\n                'data-hotkey': hotkey\r\n            });\r\n            if (button.toggle === true){\r\n              buttonContainer.attr('data-toggle', 'button');\r\n            }\r\n            buttonIconContainer = $('<span/>');\r\n            buttonIconContainer.addClass(buttonIcon);\r\n            buttonIconContainer.prependTo(buttonContainer);\r\n\r\n            // Attach the button object\r\n            btnGroupContainer.append(buttonContainer);\r\n\r\n            // Register handler and callback\r\n            handler.push(buttonHandler);\r\n            callback.push(button.callback);\r\n          }\r\n\r\n          // Attach the button group into container dom\r\n          container.append(btnGroupContainer);\r\n        }\r\n      }\r\n\r\n      return container;\r\n    }\r\n  , __setListener: function() {\r\n      // Set size and resizable Properties\r\n      var hasRows = typeof this.$textarea.attr('rows') !== 'undefined',\r\n          maxRows = this.$textarea.val().split(\"\\n\").length > 5 ? this.$textarea.val().split(\"\\n\").length : '5',\r\n          rowsVal = hasRows ? this.$textarea.attr('rows') : maxRows;\r\n\r\n      this.$textarea.attr('rows',rowsVal);\r\n      if (this.$options.resize) {\r\n        this.$textarea.css('resize',this.$options.resize);\r\n      }\r\n\r\n      this.$textarea.on({\r\n          'focus' : $.proxy(this.focus, this),\r\n          'keyup' : $.proxy(this.keyup, this),\r\n          'change' : $.proxy(this.change, this),\r\n          'select' : $.proxy(this.select, this)\r\n      });\r\n\r\n      if (this.eventSupported('keydown')) {\r\n        this.$textarea.on('keydown', $.proxy(this.keydown, this));\r\n      }\r\n\r\n      if (this.eventSupported('keypress')) {\r\n        this.$textarea.on('keypress', $.proxy(this.keypress, this))\r\n      }\r\n\r\n      // Re-attach markdown data\r\n      this.$textarea.data('markdown',this);\r\n    }\r\n\r\n  , __handle: function(e) {\r\n      var target = $(e.currentTarget),\r\n          handler = this.$handler,\r\n          callback = this.$callback,\r\n          handlerName = target.attr('data-handler'),\r\n          callbackIndex = handler.indexOf(handlerName),\r\n          callbackHandler = callback[callbackIndex];\r\n\r\n      // Trigger the focusin\r\n      $(e.currentTarget).focus();\r\n\r\n      callbackHandler(this);\r\n\r\n      // Trigger onChange for each button handle\r\n      this.change(this);\r\n\r\n      // Unless it was the save handler,\r\n      // focusin the textarea\r\n      if (handlerName.indexOf('cmdSave') < 0) {\r\n        this.$textarea.focus();\r\n      }\r\n\r\n      e.preventDefault();\r\n    }\r\n\r\n  , __localize: function(string) {\r\n      var messages = $.fn.markdown.messages,\r\n          language = this.$options.language;\r\n      if (\r\n        typeof messages !== 'undefined' &&\r\n        typeof messages[language] !== 'undefined' &&\r\n        typeof messages[language][string] !== 'undefined'\r\n      ) {\r\n        return messages[language][string];\r\n      }\r\n      return string;\r\n    }\r\n\r\n  , __getIcon: function(src) {\r\n    return typeof src == 'object' ? src[this.$options.iconlibrary] : src;\r\n  }\r\n\r\n  , setFullscreen: function(mode) {\r\n    var $editor = this.$editor,\r\n        $textarea = this.$textarea;\r\n\r\n    if (mode === true) {\r\n      $editor.addClass('md-fullscreen-mode');\r\n      $('body').addClass('md-nooverflow');\r\n      this.$options.onFullscreen(this);\r\n    } else {\r\n      $editor.removeClass('md-fullscreen-mode');\r\n      $('body').removeClass('md-nooverflow');\r\n\r\n      if (this.$isPreview == true) this.hidePreview().showPreview()\r\n    }\r\n\r\n    this.$isFullscreen = mode;\r\n    $textarea.focus();\r\n  }\r\n\r\n  , showEditor: function() {\r\n      var instance = this,\r\n          textarea,\r\n          ns = this.$ns,\r\n          container = this.$element,\r\n          originalHeigth = container.css('height'),\r\n          originalWidth = container.css('width'),\r\n          editable = this.$editable,\r\n          handler = this.$handler,\r\n          callback = this.$callback,\r\n          options = this.$options,\r\n          editor = $( '<div/>', {\r\n                      'class': 'md-editor',\r\n                      click: function() {\r\n                        instance.focus();\r\n                      }\r\n                    });\r\n\r\n      // Prepare the editor\r\n      if (this.$editor === null) {\r\n        // Create the panel\r\n        var editorHeader = $('<div/>', {\r\n                            'class': 'md-header btn-toolbar'\r\n                            });\r\n\r\n        // Merge the main & additional button groups together\r\n        var allBtnGroups = [];\r\n        if (options.buttons.length > 0) allBtnGroups = allBtnGroups.concat(options.buttons[0]);\r\n        if (options.additionalButtons.length > 0) {\r\n          // iterate the additional button groups\r\n          $.each(options.additionalButtons[0], function(idx, buttonGroup){\r\n            \r\n            // see if the group name of the addional group matches an existing group\r\n            var matchingGroups = $.grep(allBtnGroups, function(allButtonGroup, allIdx){\r\n              return allButtonGroup.name === buttonGroup.name;\r\n            });\r\n\r\n            // if it matches add the addional buttons to that group, if not just add it to the all buttons group\r\n            if(matchingGroups.length > 0) {\r\n              matchingGroups[0].data = matchingGroups[0].data.concat(buttonGroup.data);\r\n            } else {              \r\n              allBtnGroups.push(options.additionalButtons[0][idx]);\r\n            }\r\n\r\n          });\r\n        } \r\n\r\n        // Reduce and/or reorder the button groups\r\n        if (options.reorderButtonGroups.length > 0) {\r\n          allBtnGroups = allBtnGroups\r\n              .filter(function(btnGroup) {\r\n                return options.reorderButtonGroups.indexOf(btnGroup.name) > -1;\r\n              })\r\n              .sort(function(a, b) {\r\n                if (options.reorderButtonGroups.indexOf(a.name) < options.reorderButtonGroups.indexOf(b.name)) return -1;\r\n                if (options.reorderButtonGroups.indexOf(a.name) > options.reorderButtonGroups.indexOf(b.name)) return 1;\r\n                return 0;\r\n              });\r\n        }\r\n\r\n        // Build the buttons\r\n        if (allBtnGroups.length > 0) {\r\n          editorHeader = this.__buildButtons([allBtnGroups], editorHeader);\r\n        }\r\n\r\n        if (options.fullscreen.enable) {\r\n          editorHeader.append('<div class=\"md-controls\"><a class=\"md-control md-control-fullscreen\" href=\"#\"><span class=\"'+this.__getIcon(options.fullscreen.icons.fullscreenOn)+'\"></span></a></div>').on('click', '.md-control-fullscreen', function(e) {\r\n              e.preventDefault();\r\n              instance.setFullscreen(true);\r\n          });\r\n        }\r\n\r\n        editor.append(editorHeader);\r\n\r\n        // Wrap the textarea\r\n        if (container.is('textarea')) {\r\n          container.before(editor);\r\n          textarea = container;\r\n          textarea.addClass('md-input');\r\n          editor.append(textarea);\r\n        } else {\r\n          var rawContent = (typeof toMarkdown == 'function') ? toMarkdown(container.html()) : container.html(),\r\n              currentContent = $.trim(rawContent);\r\n\r\n          // This is some arbitrary content that could be edited\r\n          textarea = $('<textarea/>', {\r\n                       'class': 'md-input',\r\n                       'val' : currentContent\r\n                      });\r\n\r\n          editor.append(textarea);\r\n\r\n          // Save the editable\r\n          editable.el = container;\r\n          editable.type = container.prop('tagName').toLowerCase();\r\n          editable.content = container.html();\r\n\r\n          $(container[0].attributes).each(function(){\r\n            editable.attrKeys.push(this.nodeName);\r\n            editable.attrValues.push(this.nodeValue);\r\n          });\r\n\r\n          // Set editor to blocked the original container\r\n          container.replaceWith(editor);\r\n        }\r\n\r\n        var editorFooter = $('<div/>', {\r\n                           'class': 'md-footer'\r\n                         }),\r\n            createFooter = false,\r\n            footer = '';\r\n        // Create the footer if savable\r\n        if (options.savable) {\r\n          createFooter = true;\r\n          var saveHandler = 'cmdSave';\r\n\r\n          // Register handler and callback\r\n          handler.push(saveHandler);\r\n          callback.push(options.onSave);\r\n\r\n          editorFooter.append('<button class=\"btn btn-success\" data-provider=\"'\r\n                              + ns\r\n                              + '\" data-handler=\"'\r\n                              + saveHandler\r\n                              + '\"><i class=\"icon icon-white icon-ok\"></i> '\r\n                              + this.__localize('Save')\r\n                              + '</button>');\r\n\r\n\r\n        }\r\n\r\n        footer = typeof options.footer === 'function' ? options.footer(this) : options.footer;\r\n\r\n        if ($.trim(footer) !== '') {\r\n          createFooter = true;\r\n          editorFooter.append(footer);\r\n        }\r\n\r\n        if (createFooter) editor.append(editorFooter);\r\n\r\n        // Set width\r\n        if (options.width && options.width !== 'inherit') {\r\n          if (jQuery.isNumeric(options.width)) {\r\n            editor.css('display', 'table');\r\n            textarea.css('width', options.width + 'px');\r\n          } else {\r\n            editor.addClass(options.width);\r\n          }\r\n        }\r\n\r\n        // Set height\r\n        if (options.height && options.height !== 'inherit') {\r\n          if (jQuery.isNumeric(options.height)) {\r\n            var height = options.height;\r\n            if (editorHeader) height = Math.max(0, height - editorHeader.outerHeight());\r\n            if (editorFooter) height = Math.max(0, height - editorFooter.outerHeight());\r\n            textarea.css('height', height + 'px');\r\n          } else {\r\n            editor.addClass(options.height);\r\n          }\r\n        }\r\n\r\n        // Reference\r\n        this.$editor     = editor;\r\n        this.$textarea   = textarea;\r\n        this.$editable   = editable;\r\n        this.$oldContent = this.getContent();\r\n\r\n        this.__setListener();\r\n\r\n        // Set editor attributes, data short-hand API and listener\r\n        this.$editor.attr('id',(new Date()).getTime());\r\n        this.$editor.on('click', '[data-provider=\"bootstrap-markdown\"]', $.proxy(this.__handle, this));\r\n\r\n        if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\r\n          this.$editor.addClass('md-editor-disabled');\r\n          this.disableButtons('all');\r\n        }\r\n\r\n        if (this.eventSupported('keydown') && typeof jQuery.hotkeys === 'object') {\r\n          editorHeader.find('[data-provider=\"bootstrap-markdown\"]').each(function() {\r\n            var $button = $(this),\r\n                hotkey = $button.attr('data-hotkey');\r\n            if (hotkey.toLowerCase() !== '') {\r\n              textarea.bind('keydown', hotkey, function() {\r\n                $button.trigger('click');\r\n                return false;\r\n              });\r\n            }\r\n          });\r\n        }\r\n\r\n        if (options.initialstate === 'preview') {\r\n          this.showPreview();\r\n        } else if (options.initialstate === 'fullscreen' && options.fullscreen.enable) {\r\n          this.setFullscreen(true);\r\n        }\r\n\r\n      } else {\r\n        this.$editor.show();\r\n      }\r\n\r\n      if (options.autofocus) {\r\n        this.$textarea.focus();\r\n        this.$editor.addClass('active');\r\n      }\r\n\r\n      if (options.fullscreen.enable && options.fullscreen !== false) {\r\n        this.$editor.append('<div class=\"md-fullscreen-controls\">'\r\n                        + '<a href=\"#\" class=\"exit-fullscreen\" title=\"Exit fullscreen\"><span class=\"' + this.__getIcon(options.fullscreen.icons.fullscreenOff) + '\">'\r\n                        + '</span></a>'\r\n                        + '</div>');\r\n        this.$editor.on('click', '.exit-fullscreen', function(e) {\r\n          e.preventDefault();\r\n          instance.setFullscreen(false);\r\n        });\r\n      }\r\n\r\n      // hide hidden buttons from options\r\n      this.hideButtons(options.hiddenButtons);\r\n\r\n      // disable disabled buttons from options\r\n      this.disableButtons(options.disabledButtons);\r\n\r\n      // Trigger the onShow hook\r\n      options.onShow(this);\r\n\r\n      return this;\r\n    }\r\n\r\n  , parseContent: function(val) {\r\n      var content;\r\n\r\n      // parse with supported markdown parser\r\n      var val = val || this.$textarea.val();\r\n\r\n      if (this.$options.parser) {\r\n        content = this.$options.parser(val);\r\n      } else if (typeof markdown == 'object') {\r\n        content = markdown.toHTML(val);\r\n      } else if (typeof marked == 'function') {\r\n        content = marked(val);\r\n      } else {\r\n        content = val;\r\n      }\r\n\r\n      return content;\r\n    }\r\n\r\n  , showPreview: function() {\r\n      var options = this.$options,\r\n          container = this.$textarea,\r\n          afterContainer = container.next(),\r\n          replacementContainer = $('<div/>',{'class':'md-preview','data-provider':'markdown-preview'}),\r\n          content,\r\n          callbackContent;\r\n\r\n      if (this.$isPreview == true) {\r\n        // Avoid sequenced element creation on missused scenario\r\n        // @see https://github.com/toopay/bootstrap-markdown/issues/170\r\n        return this;\r\n      }\r\n      \r\n      // Give flag that tell the editor enter preview mode\r\n      this.$isPreview = true;\r\n      // Disable all buttons\r\n      this.disableButtons('all').enableButtons('cmdPreview');\r\n\r\n      // Try to get the content from callback\r\n      callbackContent = options.onPreview(this);\r\n      // Set the content based from the callback content if string otherwise parse value from textarea\r\n      content = typeof callbackContent == 'string' ? callbackContent : this.parseContent();\r\n\r\n      // Build preview element\r\n      replacementContainer.html(content);\r\n\r\n      if (afterContainer && afterContainer.attr('class') == 'md-footer') {\r\n        // If there is footer element, insert the preview container before it\r\n        replacementContainer.insertBefore(afterContainer);\r\n      } else {\r\n        // Otherwise, just append it after textarea\r\n        container.parent().append(replacementContainer);\r\n      }\r\n\r\n      // Set the preview element dimensions\r\n      replacementContainer.css({\r\n        width: container.outerWidth() + 'px',\r\n        height: container.outerHeight() + 'px'\r\n      });\r\n\r\n      if (this.$options.resize) {\r\n        replacementContainer.css('resize',this.$options.resize);\r\n      }\r\n\r\n      // Hide the last-active textarea\r\n      container.hide();\r\n\r\n      // Attach the editor instances\r\n      replacementContainer.data('markdown',this);\r\n\r\n      if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\r\n        this.$editor.addClass('md-editor-disabled');\r\n        this.disableButtons('all');\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n  , hidePreview: function() {\r\n      // Give flag that tell the editor quit preview mode\r\n      this.$isPreview = false;\r\n\r\n      // Obtain the preview container\r\n      var container = this.$editor.find('div[data-provider=\"markdown-preview\"]');\r\n\r\n      // Remove the preview container\r\n      container.remove();\r\n\r\n      // Enable all buttons\r\n      this.enableButtons('all');\r\n      // Disable configured disabled buttons\r\n      this.disableButtons(this.$options.disabledButtons);\r\n\r\n      // Back to the editor\r\n      this.$textarea.show();\r\n      this.__setListener();\r\n\r\n      return this;\r\n    }\r\n\r\n  , isDirty: function() {\r\n      return this.$oldContent != this.getContent();\r\n    }\r\n\r\n  , getContent: function() {\r\n      return this.$textarea.val();\r\n    }\r\n\r\n  , setContent: function(content) {\r\n      this.$textarea.val(content);\r\n\r\n      return this;\r\n    }\r\n\r\n  , findSelection: function(chunk) {\r\n    var content = this.getContent(), startChunkPosition;\r\n\r\n    if (startChunkPosition = content.indexOf(chunk), startChunkPosition >= 0 && chunk.length > 0) {\r\n      var oldSelection = this.getSelection(), selection;\r\n\r\n      this.setSelection(startChunkPosition,startChunkPosition+chunk.length);\r\n      selection = this.getSelection();\r\n\r\n      this.setSelection(oldSelection.start,oldSelection.end);\r\n\r\n      return selection;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  , getSelection: function() {\r\n\r\n      var e = this.$textarea[0];\r\n\r\n      return (\r\n\r\n          ('selectionStart' in e && function() {\r\n              var l = e.selectionEnd - e.selectionStart;\r\n              return { start: e.selectionStart, end: e.selectionEnd, length: l, text: e.value.substr(e.selectionStart, l) };\r\n          }) ||\r\n\r\n          /* browser not supported */\r\n          function() {\r\n            return null;\r\n          }\r\n\r\n      )();\r\n\r\n    }\r\n\r\n  , setSelection: function(start,end) {\r\n\r\n      var e = this.$textarea[0];\r\n\r\n      return (\r\n\r\n          ('selectionStart' in e && function() {\r\n              e.selectionStart = start;\r\n              e.selectionEnd = end;\r\n              return;\r\n          }) ||\r\n\r\n          /* browser not supported */\r\n          function() {\r\n            return null;\r\n          }\r\n\r\n      )();\r\n\r\n    }\r\n\r\n  , replaceSelection: function(text) {\r\n\r\n      var e = this.$textarea[0];\r\n\r\n      return (\r\n\r\n          ('selectionStart' in e && function() {\r\n              e.value = e.value.substr(0, e.selectionStart) + text + e.value.substr(e.selectionEnd, e.value.length);\r\n              // Set cursor to the last replacement end\r\n              e.selectionStart = e.value.length;\r\n              return this;\r\n          }) ||\r\n\r\n          /* browser not supported */\r\n          function() {\r\n              e.value += text;\r\n              return jQuery(e);\r\n          }\r\n\r\n      )();\r\n    }\r\n\r\n  , getNextTab: function() {\r\n      // Shift the nextTab\r\n      if (this.$nextTab.length === 0) {\r\n        return null;\r\n      } else {\r\n        var nextTab, tab = this.$nextTab.shift();\r\n\r\n        if (typeof tab == 'function') {\r\n          nextTab = tab();\r\n        } else if (typeof tab == 'object' && tab.length > 0) {\r\n          nextTab = tab;\r\n        }\r\n\r\n        return nextTab;\r\n      }\r\n    }\r\n\r\n  , setNextTab: function(start,end) {\r\n      // Push new selection into nextTab collections\r\n      if (typeof start == 'string') {\r\n        var that = this;\r\n        this.$nextTab.push(function(){\r\n          return that.findSelection(start);\r\n        });\r\n      } else if (typeof start == 'number' && typeof end == 'number') {\r\n        var oldSelection = this.getSelection();\r\n\r\n        this.setSelection(start,end);\r\n        this.$nextTab.push(this.getSelection());\r\n\r\n        this.setSelection(oldSelection.start,oldSelection.end);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n  , __parseButtonNameParam: function (names) {\r\n      return typeof names == 'string' ?\r\n                      names.split(' ') :\r\n                      names;\r\n\r\n    }\r\n\r\n  , enableButtons: function(name) {\r\n      var buttons = this.__parseButtonNameParam(name),\r\n        that = this;\r\n\r\n      $.each(buttons, function(i, v) {\r\n        that.__alterButtons(buttons[i], function (el) {\r\n          el.removeAttr('disabled');\r\n        });\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n  , disableButtons: function(name) {\r\n      var buttons = this.__parseButtonNameParam(name),\r\n        that = this;\r\n\r\n      $.each(buttons, function(i, v) {\r\n        that.__alterButtons(buttons[i], function (el) {\r\n          el.attr('disabled','disabled');\r\n        });\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n  , hideButtons: function(name) {\r\n      var buttons = this.__parseButtonNameParam(name),\r\n        that = this;\r\n\r\n      $.each(buttons, function(i, v) {\r\n        that.__alterButtons(buttons[i], function (el) {\r\n          el.addClass('hidden');\r\n        });\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n  , showButtons: function(name) {\r\n      var buttons = this.__parseButtonNameParam(name),\r\n        that = this;\r\n\r\n      $.each(buttons, function(i, v) {\r\n        that.__alterButtons(buttons[i], function (el) {\r\n          el.removeClass('hidden');\r\n        });\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n  , eventSupported: function(eventName) {\r\n      var isSupported = eventName in this.$element;\r\n      if (!isSupported) {\r\n        this.$element.setAttribute(eventName, 'return;');\r\n        isSupported = typeof this.$element[eventName] === 'function';\r\n      }\r\n      return isSupported;\r\n    }\r\n\r\n  , keyup: function (e) {\r\n      var blocked = false;\r\n      switch(e.keyCode) {\r\n        case 40: // down arrow\r\n        case 38: // up arrow\r\n        case 16: // shift\r\n        case 17: // ctrl\r\n        case 18: // alt\r\n          break;\r\n\r\n        case 9: // tab\r\n          var nextTab;\r\n          if (nextTab = this.getNextTab(),nextTab !== null) {\r\n            // Get the nextTab if exists\r\n            var that = this;\r\n            setTimeout(function(){\r\n              that.setSelection(nextTab.start,nextTab.end);\r\n            },500);\r\n\r\n            blocked = true;\r\n          } else {\r\n            // The next tab memory contains nothing...\r\n            // check the cursor position to determine tab action\r\n            var cursor = this.getSelection();\r\n\r\n            if (cursor.start == cursor.end && cursor.end == this.getContent().length) {\r\n              // The cursor already reach the end of the content\r\n              blocked = false;\r\n            } else {\r\n              // Put the cursor to the end\r\n              this.setSelection(this.getContent().length,this.getContent().length);\r\n\r\n              blocked = true;\r\n            }\r\n          }\r\n\r\n          break;\r\n\r\n        case 13: // enter\r\n          blocked = false;\r\n          break;\r\n        case 27: // escape\r\n          if (this.$isFullscreen) this.setFullscreen(false);\r\n          blocked = false;\r\n          break;\r\n\r\n        default:\r\n          blocked = false;\r\n      }\r\n\r\n      if (blocked) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n\r\n      this.$options.onChange(this);\r\n    }\r\n\r\n  , change: function(e) {\r\n      this.$options.onChange(this);\r\n      return this;\r\n    }\r\n  , select: function (e) {\r\n      this.$options.onSelect(this);\r\n      return this;\r\n    }\r\n  , focus: function (e) {\r\n      var options = this.$options,\r\n          isHideable = options.hideable,\r\n          editor = this.$editor;\r\n\r\n      editor.addClass('active');\r\n\r\n      // Blur other markdown(s)\r\n      $(document).find('.md-editor').each(function(){\r\n        if ($(this).attr('id') !== editor.attr('id')) {\r\n          var attachedMarkdown;\r\n\r\n          if (attachedMarkdown = $(this).find('textarea').data('markdown'),\r\n              attachedMarkdown === null) {\r\n              attachedMarkdown = $(this).find('div[data-provider=\"markdown-preview\"]').data('markdown');\r\n          }\r\n\r\n          if (attachedMarkdown) {\r\n            attachedMarkdown.blur();\r\n          }\r\n        }\r\n      });\r\n\r\n      // Trigger the onFocus hook\r\n      options.onFocus(this);\r\n\r\n      return this;\r\n    }\r\n\r\n  , blur: function (e) {\r\n      var options = this.$options,\r\n          isHideable = options.hideable,\r\n          editor = this.$editor,\r\n          editable = this.$editable;\r\n\r\n      if (editor.hasClass('active') || this.$element.parent().length === 0) {\r\n        editor.removeClass('active');\r\n\r\n        if (isHideable) {\r\n          // Check for editable elements\r\n          if (editable.el !== null) {\r\n            // Build the original element\r\n            var oldElement = $('<'+editable.type+'/>'),\r\n                content = this.getContent(),\r\n                currentContent = this.parseContent(content);\r\n\r\n            $(editable.attrKeys).each(function(k,v) {\r\n              oldElement.attr(editable.attrKeys[k],editable.attrValues[k]);\r\n            });\r\n\r\n            // Get the editor content\r\n            oldElement.html(currentContent);\r\n\r\n            editor.replaceWith(oldElement);\r\n          } else {\r\n            editor.hide();\r\n          }\r\n        }\r\n\r\n        // Trigger the onBlur hook\r\n        options.onBlur(this);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n  };\r\n\r\n /* MARKDOWN PLUGIN DEFINITION\r\n  * ========================== */\r\n\r\n  var old = $.fn.markdown;\r\n\r\n  $.fn.markdown = function (option) {\r\n    return this.each(function () {\r\n      var $this = $(this)\r\n        , data = $this.data('markdown')\r\n        , options = typeof option == 'object' && option;\r\n      if (!data) $this.data('markdown', (data = new Markdown(this, options)))\r\n    })\r\n  };\r\n\r\n  $.fn.markdown.messages = {};\r\n\r\n  $.fn.markdown.defaults = {\r\n    /* Editor Properties */\r\n    autofocus: false,\r\n    hideable: false,\r\n    savable: false,\r\n    width: 'inherit',\r\n    height: 'inherit',\r\n    resize: 'none',\r\n    iconlibrary: 'glyph',\r\n    language: 'en',\r\n    initialstate: 'editor',\r\n    parser: null,\r\n\r\n    /* Buttons Properties */\r\n    buttons: [\r\n      [{\r\n        name: 'groupFont',\r\n        data: [{\r\n          name: 'cmdBold',\r\n          hotkey: 'Ctrl+B',\r\n          title: 'Bold',\r\n          icon: { glyph: 'glyphicon glyphicon-bold', fa: 'fa fa-bold', 'fa-3': 'icon-bold' },\r\n          callback: function(e){\r\n            // Give/remove ** surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('strong text');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (content.substr(selected.start-2,2) === '**'\r\n                && content.substr(selected.end,2) === '**' ) {\r\n              e.setSelection(selected.start-2,selected.end+2);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-2;\r\n            } else {\r\n              e.replaceSelection('**'+chunk+'**');\r\n              cursor = selected.start+2;\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },{\r\n          name: 'cmdItalic',\r\n          title: 'Italic',\r\n          hotkey: 'Ctrl+I',\r\n          icon: { glyph: 'glyphicon glyphicon-italic', fa: 'fa fa-italic', 'fa-3': 'icon-italic' },\r\n          callback: function(e){\r\n            // Give/remove * surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('emphasized text');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (content.substr(selected.start-1,1) === '_'\r\n                && content.substr(selected.end,1) === '_' ) {\r\n              e.setSelection(selected.start-1,selected.end+1);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-1;\r\n            } else {\r\n              e.replaceSelection('_'+chunk+'_');\r\n              cursor = selected.start+1;\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },{\r\n          name: 'cmdHeading',\r\n          title: 'Heading',\r\n          hotkey: 'Ctrl+H',\r\n          icon: { glyph: 'glyphicon glyphicon-header', fa: 'fa fa-header', 'fa-3': 'icon-font' },\r\n          callback: function(e){\r\n            // Append/remove ### surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent(), pointer, prevChar;\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('heading text');\r\n            } else {\r\n              chunk = selected.text + '\\n';\r\n            }\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if ((pointer = 4, content.substr(selected.start-pointer,pointer) === '### ')\r\n                || (pointer = 3, content.substr(selected.start-pointer,pointer) === '###')) {\r\n              e.setSelection(selected.start-pointer,selected.end);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-pointer;\r\n            } else if (selected.start > 0 && (prevChar = content.substr(selected.start-1,1), !!prevChar && prevChar != '\\n')) {\r\n              e.replaceSelection('\\n\\n### '+chunk);\r\n              cursor = selected.start+6;\r\n            } else {\r\n              // Empty string before element\r\n              e.replaceSelection('### '+chunk);\r\n              cursor = selected.start+4;\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        }]\r\n      },{\r\n        name: 'groupLink',\r\n        data: [{\r\n          name: 'cmdUrl',\r\n          title: 'URL/Link',\r\n          hotkey: 'Ctrl+L',\r\n          icon: { glyph: 'glyphicon glyphicon-link', fa: 'fa fa-link', 'fa-3': 'icon-link' },\r\n          callback: function(e){\r\n            // Give [] surround the selection and prepend the link\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent(), link;\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('enter link description here');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            link = prompt(e.__localize('Insert Hyperlink'),'http://');\r\n\r\n            var urlRegex = new RegExp('^((http|https)://|(mailto:)|(//))[a-z0-9]', 'i');\r\n            if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\r\n              var sanitizedLink = $('<div>'+link+'</div>').text();\r\n\r\n              // transform selection and set the cursor into chunked text\r\n              e.replaceSelection('['+chunk+']('+sanitizedLink+')');\r\n              cursor = selected.start+1;\r\n\r\n              // Set the cursor\r\n              e.setSelection(cursor,cursor+chunk.length);\r\n            }\r\n          }\r\n        },{\r\n          name: 'cmdImage',\r\n          title: 'Image',\r\n          hotkey: 'Ctrl+G',\r\n          icon: { glyph: 'glyphicon glyphicon-picture', fa: 'fa fa-picture-o', 'fa-3': 'icon-picture' },\r\n          callback: function(e){\r\n            // Give ![] surround the selection and prepend the image link\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent(), link;\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('enter image description here');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            link = prompt(e.__localize('Insert Image Hyperlink'),'http://');\r\n\r\n            var urlRegex = new RegExp('^((http|https)://|(//))[a-z0-9]', 'i');\r\n            if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\r\n              var sanitizedLink = $('<div>'+link+'</div>').text();\r\n\r\n              // transform selection and set the cursor into chunked text\r\n              e.replaceSelection('!['+chunk+']('+sanitizedLink+' \"'+e.__localize('enter image title here')+'\")');\r\n              cursor = selected.start+2;\r\n\r\n              // Set the next tab\r\n              e.setNextTab(e.__localize('enter image title here'));\r\n\r\n              // Set the cursor\r\n              e.setSelection(cursor,cursor+chunk.length);\r\n            }\r\n          }\r\n        }]\r\n      },{\r\n        name: 'groupMisc',\r\n        data: [{\r\n          name: 'cmdList',\r\n          hotkey: 'Ctrl+U',\r\n          title: 'Unordered List',\r\n          icon: { glyph: 'glyphicon glyphicon-list', fa: 'fa fa-list', 'fa-3': 'icon-list-ul' },\r\n          callback: function(e){\r\n            // Prepend/Give - surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('list text here');\r\n\r\n              e.replaceSelection('- '+chunk);\r\n              // Set the cursor\r\n              cursor = selected.start+2;\r\n            } else {\r\n              if (selected.text.indexOf('\\n') < 0) {\r\n                chunk = selected.text;\r\n\r\n                e.replaceSelection('- '+chunk);\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+2;\r\n              } else {\r\n                var list = [];\r\n\r\n                list = selected.text.split('\\n');\r\n                chunk = list[0];\r\n\r\n                $.each(list,function(k,v) {\r\n                  list[k] = '- '+v;\r\n                });\r\n\r\n                e.replaceSelection('\\n\\n'+list.join('\\n'));\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+4;\r\n              }\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },\r\n        {\r\n          name: 'cmdListO',\r\n          hotkey: 'Ctrl+O',\r\n          title: 'Ordered List',\r\n          icon: { glyph: 'glyphicon glyphicon-th-list', fa: 'fa fa-list-ol', 'fa-3': 'icon-list-ol' },\r\n          callback: function(e) {\r\n\r\n            // Prepend/Give - surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('list text here');\r\n              e.replaceSelection('1. '+chunk);\r\n              // Set the cursor\r\n              cursor = selected.start+3;\r\n            } else {\r\n              if (selected.text.indexOf('\\n') < 0) {\r\n                chunk = selected.text;\r\n\r\n                e.replaceSelection('1. '+chunk);\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+3;\r\n              } else {\r\n                var list = [];\r\n\r\n                list = selected.text.split('\\n');\r\n                chunk = list[0];\r\n\r\n                $.each(list,function(k,v) {\r\n                  list[k] = '1. '+v;\r\n                });\r\n\r\n                e.replaceSelection('\\n\\n'+list.join('\\n'));\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+5;\r\n              }\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },\r\n        {\r\n          name: 'cmdCode',\r\n          hotkey: 'Ctrl+K',\r\n          title: 'Code',\r\n          icon: { glyph: 'glyphicon glyphicon-asterisk', fa: 'fa fa-code', 'fa-3': 'icon-code' },\r\n          callback: function(e) {\r\n            // Give/remove ** surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('code text here');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (content.substr(selected.start-4,4) === '```\\n'\r\n                && content.substr(selected.end,4) === '\\n```') {\r\n              e.setSelection(selected.start-4, selected.end+4);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-4;\r\n            } else if (content.substr(selected.start-1,1) === '`'\r\n                && content.substr(selected.end,1) === '`') {\r\n              e.setSelection(selected.start-1,selected.end+1);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-1;\r\n            } else if (content.indexOf('\\n') > -1) {\r\n              e.replaceSelection('```\\n'+chunk+'\\n```');\r\n              cursor = selected.start+4;\r\n            } else {\r\n              e.replaceSelection('`'+chunk+'`');\r\n              cursor = selected.start+1;\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },\r\n        {\r\n          name: 'cmdQuote',\r\n          hotkey: 'Ctrl+Q',\r\n          title: 'Quote',\r\n          icon: { glyph: 'glyphicon glyphicon-comment', fa: 'fa fa-quote-left', 'fa-3': 'icon-quote-left' },\r\n          callback: function(e) {\r\n            // Prepend/Give - surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('quote here');\r\n\r\n              e.replaceSelection('> '+chunk);\r\n\r\n              // Set the cursor\r\n              cursor = selected.start+2;\r\n            } else {\r\n              if (selected.text.indexOf('\\n') < 0) {\r\n                chunk = selected.text;\r\n\r\n                e.replaceSelection('> '+chunk);\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+2;\r\n              } else {\r\n                var list = [];\r\n\r\n                list = selected.text.split('\\n');\r\n                chunk = list[0];\r\n\r\n                $.each(list,function(k,v) {\r\n                  list[k] = '> '+v;\r\n                });\r\n\r\n                e.replaceSelection('\\n\\n'+list.join('\\n'));\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+4;\r\n              }\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        }]\r\n      },{\r\n        name: 'groupUtil',\r\n        data: [{\r\n          name: 'cmdPreview',\r\n          toggle: true,\r\n          hotkey: 'Ctrl+P',\r\n          title: 'Preview',\r\n          btnText: 'Preview',\r\n          btnClass: 'btn btn-primary btn-sm',\r\n          icon: { glyph: 'glyphicon glyphicon-search', fa: 'fa fa-search', 'fa-3': 'icon-search' },\r\n          callback: function(e){\r\n            // Check the preview mode and toggle based on this flag\r\n            var isPreview = e.$isPreview,content;\r\n\r\n            if (isPreview === false) {\r\n              // Give flag that tell the editor enter preview mode\r\n              e.showPreview();\r\n            } else {\r\n              e.hidePreview();\r\n            }\r\n          }\r\n        }]\r\n      }]\r\n    ],\r\n    additionalButtons:[], // Place to hook more buttons by code\r\n    reorderButtonGroups:[],\r\n    hiddenButtons:[], // Default hidden buttons\r\n    disabledButtons:[], // Default disabled buttons\r\n    footer: '',\r\n    fullscreen: {\r\n      enable: true,\r\n      icons: {\r\n        fullscreenOn: {\r\n          fa: 'fa fa-expand',\r\n          glyph: 'glyphicon glyphicon-fullscreen',\r\n          'fa-3': 'icon-resize-full'\r\n        },\r\n        fullscreenOff: {\r\n          fa: 'fa fa-compress',\r\n          glyph: 'glyphicon glyphicon-fullscreen',\r\n          'fa-3': 'icon-resize-small'\r\n        }\r\n      }\r\n    },\r\n\r\n    /* Events hook */\r\n    onShow: function (e) {},\r\n    onPreview: function (e) {},\r\n    onSave: function (e) {},\r\n    onBlur: function (e) {},\r\n    onFocus: function (e) {},\r\n    onChange: function(e) {},\r\n    onFullscreen: function(e) {},\r\n    onSelect: function (e) {}\r\n  };\r\n\r\n  $.fn.markdown.Constructor = Markdown;\r\n\r\n\r\n /* MARKDOWN NO CONFLICT\r\n  * ==================== */\r\n\r\n  $.fn.markdown.noConflict = function () {\r\n    $.fn.markdown = old;\r\n    return this;\r\n  };\r\n\r\n  /* MARKDOWN GLOBAL FUNCTION & DATA-API\r\n  * ==================================== */\r\n  var initMarkdown = function(el) {\r\n    var $this = el;\r\n\r\n    if ($this.data('markdown')) {\r\n      $this.data('markdown').showEditor();\r\n      return;\r\n    }\r\n\r\n    $this.markdown()\r\n  };\r\n\r\n  var blurNonFocused = function(e) {\r\n    var $activeElement = $(document.activeElement);\r\n\r\n    // Blur event\r\n    $(document).find('.md-editor').each(function(){\r\n      var $this            = $(this),\r\n          focused          = $activeElement.closest('.md-editor')[0] === this,\r\n          attachedMarkdown = $this.find('textarea').data('markdown') ||\r\n                             $this.find('div[data-provider=\"markdown-preview\"]').data('markdown');\r\n\r\n      if (attachedMarkdown && !focused) {\r\n        attachedMarkdown.blur();\r\n      }\r\n    })\r\n  };\r\n\r\n  $(document)\r\n    .on('click.markdown.data-api', '[data-provide=\"markdown-editable\"]', function (e) {\r\n      initMarkdown($(this));\r\n      e.preventDefault();\r\n    })\r\n    .on('click focusin', function (e) {\r\n      blurNonFocused(e);\r\n    })\r\n    .ready(function(){\r\n      $('textarea[data-provide=\"markdown\"]').each(function(){\r\n        initMarkdown($(this));\r\n      })\r\n    });\r\n\r\n}));\r\n"],"sourceRoot":"/source/"}