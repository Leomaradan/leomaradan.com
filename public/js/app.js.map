{"version":3,"sources":["parallax.js","app.js"],"names":[],"mappingsnZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/*!\r\n * parallax.js v1.4.2 (http://pixelcog.github.io/parallax.js/)\r\n * @copyright 2016 PixelCog, Inc.\r\n * @license MIT (https://github.com/pixelcog/parallax.js/blob/master/LICENSE)\r\n */\r\n\r\n;(function ( $, window, document, undefined ) {\r\n\r\n  // Polyfill for requestAnimationFrame\r\n  // via: https://gist.github.com/paulirish/1579671\r\n\r\n  (function() {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n      window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\r\n      window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\r\n        || window[vendors[x]+'CancelRequestAnimationFrame'];\r\n    }\r\n\r\n    if (!window.requestAnimationFrame)\r\n      window.requestAnimationFrame = function(callback) {\r\n        var currTime = new Date().getTime();\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n        var id = window.setTimeout(function() { callback(currTime + timeToCall); },\r\n          timeToCall);\r\n        lastTime = currTime + timeToCall;\r\n        return id;\r\n      };\r\n\r\n    if (!window.cancelAnimationFrame)\r\n      window.cancelAnimationFrame = function(id) {\r\n        clearTimeout(id);\r\n      };\r\n  }());\r\n\r\n\r\n  // Parallax Constructor\r\n\r\n  function Parallax(element, options) {\r\n    var self = this;\r\n\r\n    if (typeof options == 'object') {\r\n      delete options.refresh;\r\n      delete options.render;\r\n      $.extend(this, options);\r\n    }\r\n\r\n    this.$element = $(element);\r\n\r\n    if (!this.imageSrc && this.$element.is('img')) {\r\n      this.imageSrc = this.$element.attr('src');\r\n    }\r\n\r\n    var positions = (this.position + '').toLowerCase().match(/\\S+/g) || [];\r\n\r\n    if (positions.length < 1) {\r\n      positions.push('center');\r\n    }\r\n    if (positions.length == 1) {\r\n      positions.push(positions[0]);\r\n    }\r\n\r\n    if (positions[0] == 'top' || positions[0] == 'bottom' || positions[1] == 'left' || positions[1] == 'right') {\r\n      positions = [positions[1], positions[0]];\r\n    }\r\n\r\n    if (this.positionX != undefined) positions[0] = this.positionX.toLowerCase();\r\n    if (this.positionY != undefined) positions[1] = this.positionY.toLowerCase();\r\n\r\n    self.positionX = positions[0];\r\n    self.positionY = positions[1];\r\n\r\n    if (this.positionX != 'left' && this.positionX != 'right') {\r\n      if (isNaN(parseInt(this.positionX))) {\r\n        this.positionX = 'center';\r\n      } else {\r\n        this.positionX = parseInt(this.positionX);\r\n      }\r\n    }\r\n\r\n    if (this.positionY != 'top' && this.positionY != 'bottom') {\r\n      if (isNaN(parseInt(this.positionY))) {\r\n        this.positionY = 'center';\r\n      } else {\r\n        this.positionY = parseInt(this.positionY);\r\n      }\r\n    }\r\n\r\n    this.position =\r\n      this.positionX + (isNaN(this.positionX)? '' : 'px') + ' ' +\r\n      this.positionY + (isNaN(this.positionY)? '' : 'px');\r\n\r\n    if (navigator.userAgent.match(/(iPod|iPhone|iPad)/)) {\r\n      if (this.imageSrc && this.iosFix && !this.$element.is('img')) {\r\n        this.$element.css({\r\n          backgroundImage: 'url(' + this.imageSrc + ')',\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: this.position\r\n        });\r\n      }\r\n      return this;\r\n    }\r\n\r\n    if (navigator.userAgent.match(/(Android)/)) {\r\n      if (this.imageSrc && this.androidFix && !this.$element.is('img')) {\r\n        this.$element.css({\r\n          backgroundImage: 'url(' + this.imageSrc + ')',\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: this.position\r\n        });\r\n      }\r\n      return this;\r\n    }\r\n\r\n    this.$mirror = $('<div />').prependTo('body');\r\n\r\n    var slider = this.$element.find('>.parallax-slider');\r\n    var sliderExisted = false;\r\n\r\n    if (slider.length == 0)\r\n      this.$slider = $('<img />').prependTo(this.$mirror);\r\n    else {\r\n      this.$slider = slider.prependTo(this.$mirror)\r\n      sliderExisted = true;\r\n    }\r\n\r\n    this.$mirror.addClass('parallax-mirror').css({\r\n      visibility: 'hidden',\r\n      zIndex: this.zIndex,\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      overflow: 'hidden'\r\n    });\r\n\r\n    this.$slider.addClass('parallax-slider').one('load', function() {\r\n      if (!self.naturalHeight || !self.naturalWidth) {\r\n        self.naturalHeight = this.naturalHeight || this.height || 1;\r\n        self.naturalWidth  = this.naturalWidth  || this.width  || 1;\r\n      }\r\n      self.aspectRatio = self.naturalWidth / self.naturalHeight;\r\n\r\n      Parallax.isSetup || Parallax.setup();\r\n      Parallax.sliders.push(self);\r\n      Parallax.isFresh = false;\r\n      Parallax.requestRender();\r\n    });\r\n\r\n    if (!sliderExisted)\r\n      this.$slider[0].src = this.imageSrc;\r\n\r\n    if (this.naturalHeight && this.naturalWidth || this.$slider[0].complete || slider.length > 0) {\r\n      this.$slider.trigger('load');\r\n    }\r\n\r\n  };\r\n\r\n\r\n  // Parallax Instance Methods\r\n\r\n  $.extend(Parallax.prototype, {\r\n    speed:    0.2,\r\n    bleed:    0,\r\n    zIndex:   -100,\r\n    iosFix:   true,\r\n    androidFix: true,\r\n    position: 'center',\r\n    overScrollFix: false,\r\n\r\n    refresh: function() {\r\n      this.boxWidth        = this.$element.outerWidth();\r\n      this.boxHeight       = this.$element.outerHeight() + this.bleed * 2;\r\n      this.boxOffsetTop    = this.$element.offset().top - this.bleed;\r\n      this.boxOffsetLeft   = this.$element.offset().left;\r\n      this.boxOffsetBottom = this.boxOffsetTop + this.boxHeight;\r\n\r\n      var winHeight = Parallax.winHeight;\r\n      var docHeight = Parallax.docHeight;\r\n      var maxOffset = Math.min(this.boxOffsetTop, docHeight - winHeight);\r\n      var minOffset = Math.max(this.boxOffsetTop + this.boxHeight - winHeight, 0);\r\n      var imageHeightMin = this.boxHeight + (maxOffset - minOffset) * (1 - this.speed) | 0;\r\n      var imageOffsetMin = (this.boxOffsetTop - maxOffset) * (1 - this.speed) | 0;\r\n\r\n      if (imageHeightMin * this.aspectRatio >= this.boxWidth) {\r\n        this.imageWidth    = imageHeightMin * this.aspectRatio | 0;\r\n        this.imageHeight   = imageHeightMin;\r\n        this.offsetBaseTop = imageOffsetMin;\r\n\r\n        var margin = this.imageWidth - this.boxWidth;\r\n\r\n        if (this.positionX == 'left') {\r\n          this.offsetLeft = 0;\r\n        } else if (this.positionX == 'right') {\r\n          this.offsetLeft = - margin;\r\n        } else if (!isNaN(this.positionX)) {\r\n          this.offsetLeft = Math.max(this.positionX, - margin);\r\n        } else {\r\n          this.offsetLeft = - margin / 2 | 0;\r\n        }\r\n      } else {\r\n        this.imageWidth    = this.boxWidth;\r\n        this.imageHeight   = this.boxWidth / this.aspectRatio | 0;\r\n        this.offsetLeft    = 0;\r\n\r\n        var margin = this.imageHeight - imageHeightMin;\r\n\r\n        if (this.positionY == 'top') {\r\n          this.offsetBaseTop = imageOffsetMin;\r\n        } else if (this.positionY == 'bottom') {\r\n          this.offsetBaseTop = imageOffsetMin - margin;\r\n        } else if (!isNaN(this.positionY)) {\r\n          this.offsetBaseTop = imageOffsetMin + Math.max(this.positionY, - margin);\r\n        } else {\r\n          this.offsetBaseTop = imageOffsetMin - margin / 2 | 0;\r\n        }\r\n      }\r\n    },\r\n\r\n    render: function() {\r\n      var scrollTop    = Parallax.scrollTop;\r\n      var scrollLeft   = Parallax.scrollLeft;\r\n      var overScroll   = this.overScrollFix ? Parallax.overScroll : 0;\r\n      var scrollBottom = scrollTop + Parallax.winHeight;\r\n\r\n      if (this.boxOffsetBottom > scrollTop && this.boxOffsetTop <= scrollBottom) {\r\n        this.visibility = 'visible';\r\n        this.mirrorTop = this.boxOffsetTop  - scrollTop;\r\n        this.mirrorLeft = this.boxOffsetLeft - scrollLeft;\r\n        this.offsetTop = this.offsetBaseTop - this.mirrorTop * (1 - this.speed);\r\n      } else {\r\n        this.visibility = 'hidden';\r\n      }\r\n\r\n      this.$mirror.css({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        visibility: this.visibility,\r\n        top: this.mirrorTop - overScroll,\r\n        left: this.mirrorLeft,\r\n        height: this.boxHeight,\r\n        width: this.boxWidth\r\n      });\r\n\r\n      this.$slider.css({\r\n        transform: 'translate3d(0px, 0px, 0px)',\r\n        position: 'absolute',\r\n        top: this.offsetTop,\r\n        left: this.offsetLeft,\r\n        height: this.imageHeight,\r\n        width: this.imageWidth,\r\n        maxWidth: 'none'\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  // Parallax Static Methods\r\n\r\n  $.extend(Parallax, {\r\n    scrollTop:    0,\r\n    scrollLeft:   0,\r\n    winHeight:    0,\r\n    winWidth:     0,\r\n    docHeight:    1 << 30,\r\n    docWidth:     1 << 30,\r\n    sliders:      [],\r\n    isReady:      false,\r\n    isFresh:      false,\r\n    isBusy:       false,\r\n\r\n    setup: function() {\r\n      if (this.isReady) return;\r\n\r\n      var $doc = $(document), $win = $(window);\r\n\r\n      var loadDimensions = function() {\r\n        Parallax.winHeight = $win.height();\r\n        Parallax.winWidth  = $win.width();\r\n        Parallax.docHeight = $doc.height();\r\n        Parallax.docWidth  = $doc.width();\r\n      };\r\n\r\n      var loadScrollPosition = function() {\r\n        var winScrollTop  = $win.scrollTop();\r\n        var scrollTopMax  = Parallax.docHeight - Parallax.winHeight;\r\n        var scrollLeftMax = Parallax.docWidth  - Parallax.winWidth;\r\n        Parallax.scrollTop  = Math.max(0, Math.min(scrollTopMax,  winScrollTop));\r\n        Parallax.scrollLeft = Math.max(0, Math.min(scrollLeftMax, $win.scrollLeft()));\r\n        Parallax.overScroll = Math.max(winScrollTop - scrollTopMax, Math.min(winScrollTop, 0));\r\n      };\r\n\r\n      $win.on('resize.px.parallax load.px.parallax', function() {\r\n          loadDimensions();\r\n          Parallax.isFresh = false;\r\n          Parallax.requestRender();\r\n        })\r\n        .on('scroll.px.parallax load.px.parallax', function() {\r\n          loadScrollPosition();\r\n          Parallax.requestRender();\r\n        });\r\n\r\n      loadDimensions();\r\n      loadScrollPosition();\r\n\r\n      this.isReady = true;\r\n    },\r\n\r\n    configure: function(options) {\r\n      if (typeof options == 'object') {\r\n        delete options.refresh;\r\n        delete options.render;\r\n        $.extend(this.prototype, options);\r\n      }\r\n    },\r\n\r\n    refresh: function() {\r\n      $.each(this.sliders, function(){ this.refresh() });\r\n      this.isFresh = true;\r\n    },\r\n\r\n    render: function() {\r\n      this.isFresh || this.refresh();\r\n      $.each(this.sliders, function(){ this.render() });\r\n    },\r\n\r\n    requestRender: function() {\r\n      var self = this;\r\n\r\n      if (!this.isBusy) {\r\n        this.isBusy = true;\r\n        window.requestAnimationFrame(function() {\r\n          self.render();\r\n          self.isBusy = false;\r\n        });\r\n      }\r\n    },\r\n    destroy: function(el){\r\n      var i,\r\n          parallaxElement = $(el).data('px.parallax');\r\n      parallaxElement.$mirror.remove();\r\n      for(i=0; i < this.sliders.length; i+=1){\r\n        if(this.sliders[i] == parallaxElement){\r\n          this.sliders.splice(i, 1);\r\n        }\r\n      }\r\n      $(el).data('px.parallax', false);\r\n      if(this.sliders.length === 0){\r\n        $(window).off('scroll.px.parallax resize.px.parallax load.px.parallax');\r\n        this.isReady = false;\r\n        Parallax.isSetup = false;\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  // Parallax Plugin Definition\r\n\r\n  function Plugin(option) {\r\n    return this.each(function () {\r\n      var $this = $(this);\r\n      var options = typeof option == 'object' && option;\r\n\r\n      if (this == window || this == document || $this.is('body')) {\r\n        Parallax.configure(options);\r\n      }\r\n      else if (!$this.data('px.parallax')) {\r\n        options = $.extend({}, $this.data(), options);\r\n        $this.data('px.parallax', new Parallax(this, options));\r\n      }\r\n      else if (typeof option == 'object')\r\n      {\r\n        $.extend($this.data('px.parallax'), options);\r\n      }\r\n      if (typeof option == 'string') {\r\n        if(option == 'destroy'){\r\n            Parallax['destroy'](this);\r\n        }else{\r\n          Parallax[option]();\r\n        }\r\n      }\r\n    })\r\n  };\r\n\r\n  var old = $.fn.parallax;\r\n\r\n  $.fn.parallax             = Plugin;\r\n  $.fn.parallax.Constructor = Parallax;\r\n\r\n\r\n  // Parallax No Conflict\r\n\r\n  $.fn.parallax.noConflict = function () {\r\n    $.fn.parallax = old;\r\n    return this;\r\n  };\r\n\r\n\r\n  // Parallax Data-API\r\n\r\n  $(document).on('ready.px.parallax.data-api', function () {\r\n    $('[data-parallax=\"scroll\"]').parallax();\r\n  });\r\n\r\n}(jQuery, window, document));","var app = new Vue({\r\n    el: 'body',\r\n    /*components: {\r\n        alert: alert,\r\n        navbar: navbar,\r\n    },*/\r\n    data: {\r\n        errors: [],\r\n        successes: [],\r\n        posts: []\r\n    }\r\n});\r\n\r\nvar minmax = function (value, min, max) {\r\n\r\n    if (min == undefined) {\r\n        return value;\r\n    }\r\n\r\n// 75, 80 => min(75, 80) = 75\r\n    if (max == undefined) {\r\n        return Math.min(min, value);\r\n    }\r\n// 0.5, 0, 1 => max(0, min(1, 0.5))\r\n    return Math.max(min, Math.min(max, value));\r\n};\r\n\r\nvar fixedNavbar = function () {\r\n\r\n\r\n\r\n    $(window).scroll(function () {\r\n\r\n        var position = $('.SiteHeader').innerHeight() /* - $('.HorizontaleMenu').outerHeight()*/;\r\n        var positionBottom = position - $('.HorizontaleMenu').outerHeight();\r\n\r\n        // fade à 50% -> 75%\r\n        var relativeScroll = 100 / position * $(window).scrollTop();\r\n\r\n        var titlePosition = minmax((40 / 75 * relativeScroll) + 35, 80);\r\n\r\n        //var titleOpacity = /*minmax(*/relativeScroll - 50/*, 50, 75)*/;// (5-Math.min(5,Math.max(,0)))/5; \r\n        //var titleOpacity = minmax(1-(relativeScroll - 50)/25, 0, 1);// (5-Math.min(5,Math.max(,0)))/5; \r\n        var titleOpacity = minmax(1 - (relativeScroll) / 75, 0, 1);// (5-Math.min(5,Math.max(,0)))/5; \r\n\r\n        $('.SiteHeader h1').css('top', titlePosition + '%');\r\n        $('.SiteHeader h1').css('opacity', titleOpacity);\r\n\r\n        if ($(window).scrollTop() > positionBottom) {\r\n            $('.HorizontaleMenu').addClass('Scroll');\r\n        }\r\n        if ($(window).scrollTop() < (positionBottom + 1)) {\r\n            $('.HorizontaleMenu').removeClass('Scroll');\r\n        }\r\n    });\r\n};\r\n\r\nif (window.matchMedia(\"(max-width: 1200px)\").matches) {\r\n    var height = ($('.HorizontaleMenu ul').height() + 30) + 'px';\r\n    $('.HorizontaleMenu, .HorizontaleMenu-Background').css('height', height);\r\n}\r\n\r\nfixedNavbar();\t\t"],"sourceRoot":"/source/"}